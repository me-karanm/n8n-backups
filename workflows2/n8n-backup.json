{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          },
          {
            "node": "WhatsApp Business Cloud",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-05T11:03:26.044Z",
  "id": "J79bKJJnapCxeS1c",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "n8n-backup",
  "nodes": [
    {
      "parameters": {},
      "id": "5ac6e7b2-d783-4ea7-8b18-e4d6022a5d0d",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1540,
        -100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $('Globals').item.json.repo.owner }}",
          "mode": ""
        },
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "f3a857db-b1d0-42ad-81dc-f06fead08b80",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        -700,
        -140
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "WTJPtu7diBl0eInN",
          "name": "GitHub account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "1541b123-ccf0-4681-847a-ed25092e9ce6",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        -60,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b454df4e-2d5b-4af3-a335-daa34ccfbe63",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        180,
        -200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "0a28f7b6-dcc9-4da6-8822-7ca1fc66555b",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        180,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a2955771-a65b-400c-a09d-c4935ac13637",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        180,
        180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "adfbc46f-b3f8-4719-ab14-641975e46040",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        360,
        0
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "WTJPtu7diBl0eInN",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "0371e599-18e3-4f7b-ae3c-cdefe3f6c1a3",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        360,
        180
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "credentials": {
        "githubApi": {
          "id": "WTJPtu7diBl0eInN",
          "name": "GitHub account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "0cb5cb8b-5f83-4696-8edb-f31940a6350e",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -920,
        20
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "me-karanm"
            },
            {
              "name": "repo.name",
              "value": "n8n-backups"
            },
            {
              "name": "repo.path",
              "value": "workflows2/"
            }
          ]
        },
        "options": {}
      },
      "id": "970b0b97-be64-40ac-8f6a-0533bf75cb0d",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -1360,
        20
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "e5395b5b-4532-4bee-8887-a1989bdfd04d",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -1540,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "385b9330-7171-46f1-b55f-31eb35eccea9",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2000,
        -200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "1dabc17e-f857-44fc-881d-4213d3b6a162",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -940,
        -260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "20c4312b-2ba0-4dcc-94a3-7f7cbfea1cc7",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -100,
        -320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "d23d2648-cde8-4428-82d7-0d76b94b2e40",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -1160,
        20
      ],
      "typeVersion": 1,
      "retryOnFail": true,
      "credentials": {
        "n8nApi": {
          "id": "n1uUiUMBesJvnuOp",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "d3c7c34e-1a3c-423c-a56f-3cc9a7293d47",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        -300,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a380d64c-89de-4e15-8125-16490efad481",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        -480,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "171009622770823",
        "recipientPhoneNumber": "917349296479",
        "textBody": "=workflow failed for:  {{ $('OneAtATime').item.json.name }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        760,
        260
      ],
      "id": "73f2b1dc-6d10-4a38-8056-c525cfb50c4f",
      "name": "WhatsApp Business Cloud",
      "webhookId": "5f0f87b1-54ef-4b95-8c29-27c7cae1df07",
      "credentials": {
        "whatsAppApi": {
          "id": "JPvNp2kC4SudtNkr",
          "name": "Primary | Marketing Miles Education"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "JugK3JVukMVLS3ax"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-03-07T06:29:14.000Z",
  "versionId": "e50b4e61-d2c4-4ce4-81c0-fb12414285c1"
}